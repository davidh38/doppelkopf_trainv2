** Data Structures
- The following immutable data structures will be created:

*** playerdict
- session: str  # Unique session identifier for the current connection
- name: str     # Display name of the player
- type: str     # Player type: "human" or "computer" for AI
- uuid: str     # Persistent unique identifier for the player across sessions

*** lobbystatusdict
- players: List[playerdict]     # List of players currently connected to the server
- tables: List[tabledict]       # List of available tables

*** tabledict
- tablename: str                # Descriptive name of the table shown in the lobby
- players: List[playerdict]     # List of players currently at the table (up to 4)
- status: str                   # Table status: "waiting" for players or "playing" a game
- game: gamedict                # The table consists of a game_dict
- rounds: int                   # Determines how many rounds a table will be played
- mode: str                   # Can be "open", "running", or "closed"

*** announcementdict
- player_id: str           # UUID of the player who made the announcement
- type: str                # Type of announcement (e.g., "re", "kontra", "no90", "no60", etc.)
- trick_number: int        # At which trick the announcement was made (0 means before first trick)
- timestamp: datetime      # When the announcement was made

*** rounddict
- players: List[playerdict]     # Players participating in this round
- cards: Dict[uuid, List[Card]] # Mapping of player UUIDs to their current hand of cards
- current_player: str           # UUID of the player whose turn it is
- eligible_cards: List[Card]    # Cards that the current player is allowed to play
- mode: str                     # Game mode: "solo", "normal", etc.
- phase: str                    # Game mode: "variant", "armut" (poverty), "playing"
- eligible_announcements: Dict  # Announcements each player can make (e.g., "re", "kontra")
- player_teams: Dict[str, str]  # Mapping of player UUIDs to their team assignment ("re", "kontra", "unknown")
- announcements: List[announcementdict]  # List of all announcements made in this round
- tricks: Dict[int, List[Tuple[str, Card]]]  # Tricks played in this round, keyed by trick number
                                               # Each trick is a list of (player_id, card) tuples
- score: Dict                  # Scores for this specific round

*** gamedict
Each game is a dict of rounds:
- rounds: Dict[int, rounddict]  # Dictionary mapping round numbers to round dictionaries (1: round1_dict, 2: round2_dict, ...)
- start_time: datetime          # When the game started
- end_time: datetime            # When the game ended (null if ongoing)
- players: List[playerdict]     # Players who participated in this game
- final_score: Dict             # Final accumulated score for the game

- A table can play one or more games
- 4 players are needed to play a game
- The user gets a random UUID, which is sent with every request to identify the user
- The server keeps track of all players and tables of the server
- The frontend will receive a filtered version of the gamedict based on the player's perspective

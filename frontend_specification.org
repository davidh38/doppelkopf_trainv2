* Frontend Specification

This file details the frontend implementation for both terminal and web interfaces.
For network protocol and data structure specifications, see network_specification.org.

** Terminal Interface

*** Functions

**** output_lobby()
   - Outputs all players in the lobby
   - Outputs all tables with the players in the table

**** render_screen()
   - Clears the terminal screen for clean display
   - Shows current lobby status using output_lobby()
   - Shows current player's token if connected
   - Displays menu of available actions based on connection state:

   If not connected:
     5 [name]        - Connect player (e.g., "5 john")

   If connected (token required for all commands):
     1 [table_name]  - Create new table (e.g., "1 mytable [token]")
     2 [table_name]  - Join table (e.g., "2 mytable [token]")
     3 [table_name]  - Start table (e.g., "3 mytable [token]")
     4               - Exit (e.g., "4 [token]")

   Returns: tuple containing (command, args, token)
     - command: string containing the numeric command (1-5)
     - args: string containing any additional arguments (table name, player name)
     - token: string containing the player's token (None if not connected)

** Web Interface

*** Components

**** LoginForm
- Input field for player name
- Connect button
- Handles player registration and token storage

**** LobbyView
- Real-time display of connected players
- List of available tables with player counts
- Create table form with:
  - Table name input
  - Number of rounds input
  - Create button
- Join/Start buttons for each table
- Logout button

**** TableView
- Display of current table status
- List of players in table
- Start game button (visible to table creator)
- Leave table button

*** State Management
- Current player token
- Connection status
- Current view (login/lobby/table)
- Lobby data (players, tables)
- Current table data

*** WebSocket Events
- Handle incoming lobby updates
- Update UI components in real-time
- Manage table state changes
- Handle game start/end transitions

*** Styling
- Responsive design for various screen sizes
- Clear visual hierarchy
- Consistent color scheme and typography
- Interactive elements (buttons, forms) styling
- Status indicators for connection state
